version: 2.1

yaml_anchors:
  build_one: &build_one
    steps:
      - checkout
      - run: docker login -u=$DOCKER_HUB_USERNAME -p=$DOCKER_HUB_PASSWORD
      - run: docker build --force-rm -t multi-arch-fuff-stage .
      - run: docker image inspect multi-arch-fuff-stage | grep "Architecture"
      - run: echo "export TARGET_ARCHITECTURE=$(dpkg --print-architecture)" >> $BASH_ENV
      - run: printf "\n>%s<\n\n" ${TARGET_ARCHITECTURE}
      # For some reason when the following is run by the CircleCI runner two NULLs are prefixed to
      # the output.  Those NULLs are converted to ^@ (presumably by Bash).  The tr command deletes
      # the errant garbage.
      - run: echo "export RUST_VERSION=$(docker run -it --rm --entrypoint /bin/sh multi-arch-fuff-stage -c 'printf $RUST_VERSION' | tr -d '^@')" >> $BASH_ENV
      - run: printf "\n>%s<\n\n" ${RUST_VERSION}
      - run: echo "export DOCKER_IMAGE_1=codingbadly/multi-arch-fuff:${RUST_VERSION}-${TARGET_ARCHITECTURE}" >> $BASH_ENV
      - run: printf "\n>%s<\n\n" ${DOCKER_IMAGE_1}
      - run: echo "export DOCKER_IMAGE_2=codingbadly/multi-arch-fuff:latest-${TARGET_ARCHITECTURE}" >> $BASH_ENV
      - run: printf "\n>%s<\n\n" ${DOCKER_IMAGE_2}
      - run: docker tag multi-arch-fuff-stage ${DOCKER_IMAGE_1}
      - run: docker tag multi-arch-fuff-stage ${DOCKER_IMAGE_2}
      - run: docker push ${DOCKER_IMAGE_1}
      - run: docker push ${DOCKER_IMAGE_2}
      # Save the Rust version for the downstream step
      - run: mkdir -p workspace
      - run: printf "export RUST_VERSION=\"%s\"\n" ${RUST_VERSION} > workspace/${TARGET_ARCHITECTURE}
      - persist_to_workspace:
          root: workspace
          paths: "*"
  context: &context
    context:
      - docker-hub

jobs:
  build_arm64:
    machine:
      image: ubuntu-2004:current
    resource_class: arm.medium
    <<: *build_one

  build_amd64:
    machine:
      image: ubuntu-2004:current
    resource_class: medium
    <<: *build_one

  build_manifest:
    machine:
      image: ubuntu-2004:current
    resource_class: small
    steps:
      - attach_workspace:
          at: workspace
      - run: ls -la workspace
      - run: cat workspace/amd64
      - run: cat workspace/arm64
      - run: cmp workspace/amd64 workspace/arm64
      - run: cat workspace/amd64 >> $BASH_ENV
      - run: printf "\n>%s<\n\n" ${RUST_VERSION}
      - run: docker login -u=$DOCKER_HUB_USERNAME -p=$DOCKER_HUB_PASSWORD
      - run: docker manifest create codingbadly/multi-arch-fuff:${RUST_VERSION} >
          --amend codingbadly/multi-arch-fuff:${RUST_VERSION}-amd64
          --amend codingbadly/multi-arch-fuff:${RUST_VERSION}-arm64
      - run: docker manifest push codingbadly/multi-arch-fuff:${RUST_VERSION}

workflows:
  build_all:
    jobs:
      - build_arm64:
          <<: *context
      - build_amd64:
          <<: *context
      - build_manifest:
          <<: *context
          requires:
            - build_arm64
            - build_amd64
